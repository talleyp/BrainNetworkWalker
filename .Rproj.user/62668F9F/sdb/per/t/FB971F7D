{
    "collab_server" : "",
    "contents" : "cor_matrices <- function(numSteps, FC, fArr_sym_den, mfpt_sym_den, n_SCDEN, z_zym, delta){\n    FC <- FC[upper.tri(FC)]\n    \n    cor_FC_FA <- rep(NULL, numSteps)\n    for(steps in 1:numSteps){\n        mat <- fArr_sym_den[steps, , ]\n        mat <- mat[upper.tri(mat)]\n        cor_FC_FA[steps] <- abs(cor(FC, mat))\n    }\n    \n    cor_FC_mfpt <- rep(NULL, numSteps)\n    for(steps in 1:numSteps){\n        mat <- mfpt_sym_den[steps, , ]\n        mat <- mat[upper.tri(mat)]\n        cor_FC_mfpt[steps] <- abs(cor(FC, mat, use = \"pairwise.complete.obs\"))\n    }\n\n    cor_n_scden <- rep(NULL, numSteps)\n    for(steps in 1:numSteps){\n        mat <- n_SCDEN[steps, , ]\n        mat <- mat[upper.tri(mat)]\n        cor_n_scden[steps] <- abs(cor(FC, mat, use = \"pairwise.complete.obs\"))\n    }\n    \n    cor_z <- rep(NULL, numSteps)\n    for(steps in 1:numSteps){\n        mat <- z_zym[steps, , ]\n        mat <- mat[upper.tri(mat)]\n        cor_z[steps] <- abs(cor(FC, mat, use = \"pairwise.complete.obs\"))\n    }\n    \n    cor_delta <- rep(NULL, numSteps)\n    for(steps in 1:numSteps){\n        mat <- delta[steps, , ]\n        mat <- mat[upper.tri(mat)]\n        cor_delta[steps] <- abs(cor(FC, mat, use = \"pairwise.complete.obs\"))\n    }\n    \n    per_na <- rep(NULL,numSteps)\n    for(steps in 1:numSteps){\n        total <- length(c(mfpt_sym_den[steps, , ]))\n        per_na[steps] <- sum(is.na(c(mfpt_sym_den[steps, , ]))) / total\n    }\n    \n    stepVec <- seq(1, numSteps)\n\n    \n    cor_matrix = as.data.frame(cbind(stepVec, abs(cor_FC_FA), abs(cor_FC_mfpt), abs(cor_n_scden), \n                                     abs(cor_z), abs(cor_delta), per_na))\n    colnames(cor_matrix) <- c(\"stepVec\",\"cor_FC_FA\",\"cor_FC_mfpt\", \"cor_n_scden\",\"cor_z\",\"cor_delta\",\"per_na\")\n    \n#     maxMFPT <- max(abs(cor_matrix$cor_FC_mfpt), na.rm=TRUE)\n#     locMFPT <- which(abs(cor_matrix$cor_FC_mfpt) == max(abs(cor_matrix$cor_FC_mfpt), na.rm=TRUE), arr.ind = TRUE)\n#     \n#     maxFA <- max(abs(cor_matrix$cor_FC_FA), na.rm=TRUE)\n#     locFA <- which(abs(cor_matrix$cor_FC_FA) == max(abs(cor_matrix$cor_FC_FA), na.rm=TRUE), arr.ind = TRUE)\n#     \n#     maxN <- max(abs(cor_matrix$cor_n_scden), na.rm=TRUE)\n#     locN <- which(abs(cor_matrix$cor_n_scden) == max(abs(cor_matrix$cor_n_scden), na.rm=TRUE), arr.ind = TRUE)    \n\n    \n    library(ggplot2)\n    ggplot(data = cor_matrix, aes(x= stepVec, y = value, color = variable)) + \n        geom_point(aes(y = cor_FC_FA, col = \"fracA\")) + \n        geom_line(aes(y = cor_FC_FA, col = \"fracA\")) + \n        geom_point(aes(y = cor_FC_mfpt, col = \"mfpt\")) +  \n        geom_line(aes(y = cor_FC_mfpt, col = \"mfpt\")) + \n        geom_point(aes(y = cor_n_scden, col = \"nArr\")) + \n        geom_line(aes(y = cor_n_scden, col = \"nArr\")) + \n        geom_point(aes(y = cor_z, col = \"Z\")) + \n        geom_line(aes(y = cor_z, col = \"Z\")) + \n        geom_point(aes(y = cor_delta, col = \"Delta\")) + \n        geom_line(aes(y = cor_delta, col = \"Delta\")) + \n        geom_point(aes(y = per_na, col = \"% NA\")) + \n        geom_line(aes(y = per_na, col = \"% NA\")) + \n#         annotate(\"text\", x = locFA, y = maxFA, label = paste(\"Max FA = \", maxFA)) +\n#         annotate(\"text\", x = locMFPT, y = maxMFPT, label = paste(\"Max FA = \", maxMFPT)) +\n#         annotate(\"text\", x = locMFPT, y = maxN, label = paste(\"Max FA = \", maxN)) +\n        labs(x=\"Step\", y=\"Correlation\")\n    \n    ggsave(paste(getwd(),\"/limited_time_mfpt\",\"/results\",\"/corr_to_fc.png\", sep = '/'))\n    return(cor_matrix)\n}\n",
    "created" : 1462271619102.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3475460326",
    "id" : "FB971F7D",
    "lastKnownWriteTime" : 1459199052,
    "last_content_update" : 1459199052,
    "path" : "/run/media/renge/Beta/Documents/Research/limited_time_mfpt/code/cor_matrices.R",
    "project_path" : "limited_time_mfpt/code/cor_matrices.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}